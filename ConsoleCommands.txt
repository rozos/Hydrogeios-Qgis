# Install QGIS 2.4
# Install TauDEM 5.1.2 Command Line Executables
# Install hydrogeios-qgis

# Define paths
pluginpath="c:/dev/hydrogeios-qgis"
projectpath="c:/dev/Mesogeia"
taudempath="c:/dev/TauDem"
demname="Mesogeia"


# Import hydrogeios
import sys
sys.path.append(pluginpath)
import geoprocess
import TauDEM
import h_const
import h_utils
import h_hru
import h_initLayers
import h_groundWater
import h_topology


# Initial delineation
TauDEM.initialize(taudempath, projectpath, demname)
TauDEM.autoDelineate(thresh=50)


# Define project properties and set "Enable 'on the fly' CRS transformation.
# Load created River shapefile and use it (enable snapping) to create the point 
# layer MyOutlet. Load the raster with suffix w (e.g. Mesogeiaw.tif)
# Unload River, unload raster with suffix w.


# Delineate with user outputs
TauDEM.autoDelineate(thresh=50, outlet="MyOutlet")


# Convert raster layer with suffix w using polygonize to vector layer Subbas
h_utils.createVectorFromRaster(projectpath, demname+'w.tif', 1, "Subbas", "DN")


# Load layer and delete nodata
h_utils.loadShapefileToCanvas(projectpath, "Subbas")
dnvals=h_utils.getFieldAttrValues("Subbas", "DN")
nodataShapeId=h_utils.getElementIndexByVal(dnvals, h_const.nodataCode)
h_utils.delSpecificShapes("Subbas", nodataShapeId)


# Disolve Subbas layer to joing small polygons with mother polys
geoprocess.dissolve(projectpath, "Subbas", h_const.subbasLayerName )


# Delete from the attribute table of layer River the field Length
h_utils.loadShapefileToCanvas(projectpath, h_const.riverLayerName)
h_utils.delField(h_const.riverLayerName, "Length")


# Initialize template layers
h_initLayers.doAll(projectpath)


# Create HRU
h_hru.doAll(projectpath, "Mesogeia", bandnum=1, rangeUpVals=(100, 250, 1500))


# Digitizie shapes in GroundWater layer
# Digitize boreholes
# Digitize springs


# Process groundwater cells
h_utils.loadShapefileToCanvas(projectpath, h_const.riverexitnodeLayerName)
h_groundWater.doAll(projectpath)


# Create hydrojunctions
h_const.DEMlayerName=demname
h_topology.createHydrojunctionLayer(projectpath)


# Add aqueduct nodes in hydrojunction
# Digitize Aqueduct


# Build topology
h_utils.addMeasureToAttrTable(h_const.aquedLayerName, h_const.aquedFieldLength)
h_topology.build()